// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

syntax = "proto3";

import "google/protobuf/any.proto";

package pumpV3;

option java_package = "netopian.network.protocol.common.sealing";
option java_outer_classname = "TypelessV3";
option go_package = "pumpv3";

enum CharsetType {
  UTF_8 = 0;
}

message RecordAny {
  uint64 version = 1;
  uint64 sequence = 2;
  CharsetType charset = 3;
  repeated google.protobuf.Any typeless_request = 31;
}

enum FrameType {
  FRAME_TYPE_UNKNOWN = 0;
  FRAME_TYPE_RST = 1;
  FRAME_TYPE_CLOSE = 2;
  FRAME_TYPE_DATA = 3;
  FRAME_TYPE_FEEDBACK = 4;
}

message Feedback {
  int64 consumed_size = 1;
}

message RecordFrame {
  string project_url = 1;
  string record_id = 2;
  int64 version = 3;
  int64 stream_id = 4;
  int64 source_stream_id = 5;
  FrameType frame_type = 6;
  bool has_continuation = 7;
  Feedback feedback = 8;
}